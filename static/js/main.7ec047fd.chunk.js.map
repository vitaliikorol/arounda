{"version":3,"sources":["Helpers/api.js","Components/LoadingSpinner.js","Components/Post.js","Components/KeyIdeas.js","index.js"],"names":["PostFromServer","React","createContext","fetch","then","response","json","LoadingSpinner","className","Post","props","useState","color","setColor","window","innerWidth","windowWidth","setWindowWidth","useLayoutEffect","updateSize","addEventListener","removeEventListener","onMouseEnter","onMouseLeave","style","display","data","id","title","body","KeyIdeas","post","setPost","alert","setAlert","posts","useContext","useEffect","startIndex","Math","ceil","random","console","log","setTimeout","slice","length","map","el","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAMaA,G,MAAiBC,IAAMC,cAHRC,MADV,8CAEbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YCShBC,G,MAVQ,WACnB,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,mBCiDZC,G,MArDF,SAACC,GAAW,IAAD,EACMC,mBAAS,IADf,mBACbC,EADa,KACNC,EADM,OAEkBF,mBAASG,OAAOC,YAFlC,mBAEbC,EAFa,KAEAC,EAFA,KAIpBC,2BAAgB,WACZ,SAASC,IACLF,EAAeH,OAAOC,YAI1B,OAFAD,OAAOM,iBAAiB,SAAUD,GAClCA,IACO,kBAAML,OAAOO,oBAAoB,SAAUF,MACnD,IAUH,OACI,6BAASG,aATS,WAClBT,EAAS,YASAU,aAPY,WACrBV,EAAS,KAOAL,UAAU,QACf,4BACIA,UAAU,cACVgB,MAAO,CACHZ,MAAM,GAAD,OAAKA,GACVa,QAAQ,GAAD,OAAKT,GAAe,IAAM,UAAY,UAGhDN,EAAMgB,KAAKC,IAEhB,4BAAQnB,UAAU,aAAagB,MAAO,CAACZ,MAAM,GAAD,OAAKA,KAC9CF,EAAMgB,KAAKE,OAEd,6BAASpB,UAAU,YAAYgB,MAAO,CAACZ,MAAM,GAAD,OAAKA,KAC5CF,EAAMgB,KAAKG,MAEhB,4BACIrB,UAAU,cACVgB,MAAO,CACHZ,MAAM,GAAD,OAAKA,GACVa,QAAQ,GAAD,OAAKT,EAAc,IAAM,UAAY,UAG/CN,EAAMgB,KAAKC,OCNbG,EAvCE,WAAO,IAAD,EACKnB,mBAAS,IADd,mBACZoB,EADY,KACNC,EADM,OAEOrB,mBAAS,iCAFhB,mBAEZsB,EAFY,KAELC,EAFK,KAGbC,EAAQC,qBAAWpC,GAazB,OAVAqC,qBAAU,WACN,IAAIC,EAAaC,KAAKC,KAAqB,GAAhBD,KAAKE,UAChCC,QAAQC,IAAIL,GACZM,YAAW,WACPT,EAAM/B,MAAK,SAAAsB,GAAI,OAAIA,EAAKmB,MAAMP,EAAYA,EAAa,MAClDlC,MAAK,SAAAsB,GAAI,OAAIM,EAAQN,MAC1BQ,EAAS,kBACV,OACJ,CAACC,IAGA,0BAAM3B,UAAU,YACK,IAAhBuB,EAAKe,OACF,yBAAKtC,UAAU,sBACX,2BAAIyB,GACJ,kBAAC,EAAD,OAGJ,oCACI,4BAAQzB,UAAU,mBAAlB,aACA,6BAASA,UAAU,kBACduB,EAAKgB,KAAI,SAAAC,GAAE,OACR,kBAAC,EAAD,CAAMC,IAAKD,EAAGrB,GAAID,KAAMsB,WC7BpDE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.7ec047fd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst PostsPath = 'https://jsonplaceholder.typicode.com/posts';\nconst downloadPosts = () => fetch(PostsPath)\n    .then(response => response.json());\n\nexport const PostFromServer = React.createContext(downloadPosts());","import React from \"react\";\nimport '../Styles/LoadingSpinner.css'\n\nconst LoadingSpinner = () => {\n    return (\n        <div className=\"loader\">\n            <div className=\"inner first\" />\n            <div className=\"inner second\" />\n            <div className=\"inner third\" />\n        </div>\n    )\n}\n\nexport default LoadingSpinner;\n","import React, {useLayoutEffect, useState} from \"react\";\nimport '../Styles/Post.css'\n\n\nconst Post = (props) => {\n    const [color, setColor] = useState('')\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useLayoutEffect(() => {\n        function updateSize() {\n            setWindowWidth(window.innerWidth);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n\n    const setHoverColor = () => {\n        setColor('#FFFFFF')\n    }\n    const removeHoverColor = () => {\n        setColor('')\n    }\n\n\n    return (\n        <section onMouseEnter={setHoverColor}\n                 onMouseLeave={removeHoverColor}\n                 className=\"Post\">\n            <footer\n                className=\"Post_footer\"\n                style={{\n                    color: `${color}`,\n                    display: `${windowWidth <= 900 ? 'initial' : 'none'}`\n                }}\n            >\n                {props.data.id}\n            </footer>\n            <header className=\"Post_title\" style={{color: `${color}`}}>\n              {props.data.title}\n            </header>\n            <article className=\"Post_body\" style={{color: `${color}`}}>\n                {props.data.body}\n            </article>\n            <footer\n                className=\"Post_footer\"\n                style={{\n                    color: `${color}`,\n                    display: `${windowWidth > 900 ? 'initial' : 'none'}`\n                }}\n            >\n                {props.data.id}\n            </footer>\n        </section>\n    )\n}\n\nexport default Post;","import React, {useContext, useEffect, useState} from 'react';\nimport '../Styles/KeyIdeas.css'\nimport {PostFromServer} from \"../Helpers/api\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport Post from \"./Post\";\n\nconst KeyIdeas = () => {\n    const [post, setPost] = useState([]);\n    const [alert, setAlert] = useState('Posts are loading from server')\n    const posts = useContext(PostFromServer)\n\n\n    useEffect(() => {\n        let startIndex = Math.ceil(Math.random() * 97);\n        console.log(startIndex)\n        setTimeout(() => {\n            posts.then(data => data.slice(startIndex, startIndex + 3))\n                .then(data => setPost(data))\n            setAlert('No posts yet')\n        }, 3000)\n    }, [posts])\n\n    return (\n        <main className=\"KeyIdeas\">\n            {post.length === 0 ? (\n                <div className=\"KeyIdeas_preloader\">\n                    <p>{alert}</p>\n                    <LoadingSpinner/>\n                </div>\n            ) : (\n                <>\n                    <header className=\"KeyIdeas_header\">Key Ideas</header>\n                    <section className=\"KeyIdeas_posts\">\n                        {post.map(el => (\n                            <Post key={el.id} data={el}/>\n                        ))}\n                    </section>\n\n                </>\n            )\n            }\n        </main>\n    );\n}\n\nexport default KeyIdeas;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport KeyIdeas from \"./Components/KeyIdeas\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <KeyIdeas />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}